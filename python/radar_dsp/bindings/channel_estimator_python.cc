/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(channel_estimator.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a22e8fba1c1b1e3ab8203df92c213b22)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/radar_dsp/channel_estimator.h>
// pydoc.h is automatically generated in the build directory
#include <channel_estimator_pydoc.h>

void bind_channel_estimator(py::module& m)
{

    using channel_estimator    = gr::radar_dsp::channel_estimator;


    py::class_<channel_estimator, gr::block, gr::basic_block,
        std::shared_ptr<channel_estimator>>(m, "channel_estimator", D(channel_estimator))

        .def(py::init(&channel_estimator::make),
           py::arg("training_seq_len"),
           py::arg("samp_rate"),
           py::arg("ts_buf"),
           D(channel_estimator,make)
        )
        



        ;




}








