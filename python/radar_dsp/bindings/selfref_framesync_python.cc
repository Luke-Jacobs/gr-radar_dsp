/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(selfref_framesync.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(e1e92318dff2dc8a8b927f64d3c35f68)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/radar_dsp/selfref_framesync.h>
// pydoc.h is automatically generated in the build directory
#include <selfref_framesync_pydoc.h>

void bind_selfref_framesync(py::module& m)
{

    using selfref_framesync    = gr::radar_dsp::selfref_framesync;


    py::class_<selfref_framesync, gr::block, gr::basic_block,
        std::shared_ptr<selfref_framesync>>(m, "selfref_framesync", D(selfref_framesync))

        .def(py::init(&selfref_framesync::make),
           py::arg("training_seq_len"),
           py::arg("packet_len"),
           py::arg("threshold"),
           D(selfref_framesync,make)
        )
        



        ;




}








